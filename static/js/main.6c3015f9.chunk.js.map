{"version":3,"sources":["components/Clock.jsx","components/Button.jsx","App.jsx","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","interval","setInterval","date","setState","console","log","prevProps","_","name","props","clearInterval","React","Component","Button","onClick","text","type","App","isClockVisible","clockName","setName","Math","floor","random","hideClock","showClock","className","ReactDOM","render","document","getElementById"],"mappings":"uMA+CeA,G,kNA1CbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,uDAGnB,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,IAAMC,GAAO,IAAIL,MAAOC,qBAExB,EAAKK,SAAS,CAAEP,KAAMM,IAEtBE,QAAQC,IAAIH,KACX,O,gCAGL,SAAmBI,EAAWC,GAC5B,IAAQC,EAAST,KAAKU,MAAdD,KAEJF,EAAUE,OAASA,GACrBJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,sBACKA,EADL,Q,kCAKJ,WACEE,cAAcX,KAAKC,Y,oBAGrB,WACE,OACE,oCACE,8BACGD,KAAKJ,MAAMC,W,GAhCFe,IAAMC,YCDbC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACpB,4BACEC,KAAK,SACLF,QAASA,GAERC,ICsCUE,E,4MArCbtB,MAAQ,CACNuB,gBAAgB,EAChBC,UAAW,G,EAGbC,QAAU,WACR,EAAKjB,SAAS,CAAEgB,UAAWE,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAG7CC,UAAY,WACV,EAAKrB,SAAS,CAAEe,gBAAgB,K,EAGlCO,UAAY,WACV,EAAKtB,SAAS,CAAEe,gBAAgB,K,4CAGlC,WACE,MAAsCnB,KAAKJ,MAAnCuB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,2CAEG,IACAR,EAAiB,kBAAC,EAAD,CAAOV,KAAMW,IAAgB,mBAGjD,kBAAC,EAAD,CAAQL,QAASf,KAAK0B,UAAWV,KAAK,eACtC,kBAAC,EAAD,CAAQD,QAASf,KAAKyB,UAAWT,KAAK,eACtC,kBAAC,EAAD,CAAQD,QAASf,KAAKqB,QAASL,KAAK,sB,GAhC1BJ,IAAMC,WCJxBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c3015f9.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n\n      this.setState({ time: date });\n\n      console.log(date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, _) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      console.log(`The Clock was renamed from ${prevProps.name}\n      to ${name}.`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <>\n        <span>\n          {this.state.time}\n        </span>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: propTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport const Button = ({ onClick, text }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: propTypes.func.isRequired,\n  text: propTypes.string.isRequired,\n};\n","/* eslint-disable no-console */\nimport React from 'react';\n\nimport './App.scss';\n\nimport Clock from './components/Clock';\nimport { Button } from './components/Button';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 1000) });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible ? <Clock name={clockName} /> : 'Clock is hidden'}\n        </p>\n\n        <Button onClick={this.showClock} text=\"Show Clock\" />\n        <Button onClick={this.hideClock} text=\"Hide Clock\" />\n        <Button onClick={this.setName} text=\"Set new name\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}